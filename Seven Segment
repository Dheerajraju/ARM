#include <LPC21XX.H>
#include "delay.h"

// Define segment pins (P0.0 to P0.7)
#define seg_d 0xff      // 8 bits for segments (bit 0 to bit 7)

// Define digit select pins (P0.8 to P0.11)
#define seg_1 (1 << 8)
#define seg_2 (1 << 9)
#define seg_3 (1 << 10)
#define seg_4 (1 << 11)

typedef unsigned char u8;

// Lookup table for displaying "HELP" on 7-segment displays
// These hex values represent the segment patterns to form letters H, E, L, P
// Each bit corresponds to a segment (a-g + dp), active HIGH assumed
u8 seg_lut[4] = {0x89, 0x86, 0xC7, 0x8C};

void digit_disp(void);

int main()
{
    // Configure all pins P0.0 to P0.11 as GPIO (PINSEL0 = 0)
    PINSEL0 = 0x00000000;

    // Set pins P0.0 to P0.11 as output (for segments + digit control)
    IODIR0 = seg_d | seg_1 | seg_2 | seg_3 | seg_4;

    while(1)
    {
        // Continuously display "HELP"
        digit_disp();
    }
}

void digit_disp()
{
    char K;

    // Loop to keep refreshing the display so persistence of vision works
    for(K = 0; K < 50; K++)
    {
        // Display first digit ('H')
        IOCLR0 = seg_d;           // Clear all segment pins (turn off segments)
        IOSET0 = seg_lut[0];      // Set segments for 'H'
        IOSET0 = seg_1;           // Enable 1st digit
        delayms(5);               // Wait for 5 milliseconds
        IOCLR0 = seg_1;           // Disable 1st digit

        // Display second digit ('E')
        IOCLR0 = seg_d;           // Clear segments
        IOSET0 = seg_lut[1];      // Set segments for 'E'
        IOSET0 = seg_2;           // Enable 2nd digit
        delayms(5);
        IOCLR0 = seg_2;           // Disable 2nd digit

        // Display third digit ('L')
        IOCLR0 = seg_d;
        IOSET0 = seg_lut[2];      // Set segments for 'L'
        IOSET0 = seg_3;           // Enable 3rd digit
        delayms(5);
        IOCLR0 = seg_3;           // Disable 3rd digit

        // Display fourth digit ('P')
        IOCLR0 = seg_d;
        IOSET0 = seg_lut[3];      // Set segments for 'P'
        IOSET0 = seg_4;           // Enable 4th digit
        delayms(5);
        IOCLR0 = seg_4;           // Disable 4th digit
    }
}
