#include <LPC21xx.H>

// Define LEDs
#define LED1 (1<<2)  // P0.2
#define LED2 (1<<3)  // P0.3

// VIC configuration macros
#define IRQ_Slot_En 0x20
#define Eint0_num 14
#define Eint1_num 15

void config_interrupts(void);

// EXTERNAL INTERRUPT0 ISR
void EXT_INT0_ISR(void) __irq
{
    EXTINT = 0x1;       // Clear EINT0 interrupt flag
    IOSET0 = LED1;
    IOCLR0 = LED1;
    VICVectAddr = 0;    // Dummy write to signal end of ISR
}

// EXTERNAL INTERRUPT1 ISR
void EXT_INT1_ISR(void) __irq
{
    EXTINT = 0x2;       // Clear EINT1 interrupt flag
    IOSET0 = LED2;
    IOCLR0 = LED2;
    VICVectAddr = 0;    // Dummy write to signal end of ISR
}

unsigned int count = 0;

int main()
{
    // Configure P0.16 as EINT0 and P0.14 as EINT1
    PINSEL1 = (1 << 0);   // P0.16 -> EINT0
    PINSEL0 = (1 << 29);  // P0.14 -> EINT1

    // Set LED pins as output
    IODIR0 = LED1 | LED2;

    config_interrupts();

    // Set interrupt mode: edge-sensitive
    EXTMODE = 0x03;     // Both EINT0 and EINT1 as edge triggered
    EXTPOLAR = 0x00;    // Falling edge

    // Enable external interrupts in VIC
    VICIntEnable = (1 << Eint0_num) | (1 << Eint1_num);

    while (1)
    {
        count++;
    }
}

void config_interrupts(void)
{
    VICIntSelect = 0x00000000; // All interrupts as IRQ

    // Set up vector slot 0 for EINT0
    VICVectCntl0 = IRQ_Slot_En | Eint0_num;
    VICVectAddr0 = (unsigned long)EXT_INT0_ISR;

    // Set up vector slot 1 for EINT1
    VICVectCntl1 = IRQ_Slot_En | Eint1_num;
    VICVectAddr1 = (unsigned long)EXT_INT1_ISR;
}
